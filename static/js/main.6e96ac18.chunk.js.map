{"version":3,"sources":["cmp/BufImageGrey32.js","cmp/Popup.js","cmp/DataViewer.js","KolmoApplication.js","cmp/ViewButton.js","../../scripts/engine.js","../../scripts/cache.js","../../scripts/network.js","../../scripts/server.js","../../scripts/formula.js","../../scripts/manifest.js","../../scripts/wasm.js","../../scripts/wasm_go.js","cmp/Cache.js","cmp/Network.js","cmp/Formula.js","cmp/Manifest.js","cmp/NavTabs.js","App.js","serviceWorker.js","cmp/RunButton.js","index.js"],"names":["BufImageGrey32","props","state","data","Uint8Array","this","dataView","DataView","buffer","canvas","document","createElement","context","getContext","width","getUint32","height","currImageData","createImageData","size","i","data_index","r","image_index","putImageData","dataURI","toDataURL","setState","src","alt","Component","PopupStyle","InnerPopupStyle","DataStyle","butStyle","Popup","axis","handle","defaultPosition","x","y","position","grid","scale","onStart","handleStart","onDrag","handleDrag","onStop","handleStop","style","className","onClick","closePopup","role","aria-label","React","DataViewer","application","doi","viewerIsShown","showData","cache","updateDataView","bind","setUpdateDataView","clearDataView","data_to_view","clearBtn","MIME","indexOf","length","TextDecoder","decode","JSON","stringify","undefined","json","stringFromOctetStream","dataTogglePopup","str","count","index","res","toString","toUpperCase","require","KolmoApplication","dedicated_server_address","Use_localStorage","options","Network","DedicatedServer","Cache","engine","global","Engine","update_manifest","update_data_view","current_manifest","current_manifest_status","manifest_focus_list","network","result","status","str_manifest","Manifest","parse","error","manifest","push","pop","ViewButton","textAreaID","manifestDataHolderID","actionClick","event","ReactDOM","unmountComponentAtNode","getElementById","btn_caption","target","innerHTML","process","manifestText","value","Buffer","from","render","eval_manifest","then","window","self","Error","settings","hasOwnProperty","raw_value","get_raw_value","search_data","get_formulas","search_manifest","get_formulas_datainfo","formulas_data","bestFormula","minDiff","curDiff","NeedBytes","HasBytes","Formula","eval_formula","formula","dependencies","get_dependencies","eval","source","doi_data_formula","dois","get_doi","cached_data","get_data_by_doi","dependencies_data","Map","dependency_manifest","get_data_by_manifest","manifest_data","set","ArgName","eval_result","set_data_by_doi","search_manifest_result","rawValue","Source","cache_result","size_result","get_size","formulas_result","myDif","formulaDiff","formulas","formula_info","dependencies_result","depIndex","j","dependency","AddResults","get_doi_result","get","get_manifest_datainfo","manifest_datainfo_result","innerStorage","key","localStorage","getItem","console","log","setItem","ToString","removeItem","delete","raw_data","Math","ceil","parseInt","substr","array_data","padStart","cached_manifests","get_cached_manifests","delete_manifest_by_doi","get_cached_data","delete_data_by_doi","startsWith","replace","get_manifest_by_doi","keys","Server","search_manifest_by_doi","search_result","json_manifest","set_manifest_by_doi","search_data_by_doi","server_data","address","url","fetch","response","json_data","statusText","arrayBuffer","wasm","jsglue","jsglue_go","parameters","actor","parameter","param","forEach","args","arg_data","wasm_wrapper","WasmGo","Wasm","init","exec","mime","get_mime","un_init","TextEncoder","encode","raw","json_formula","raw_wasm","wasm_memory","WebAssembly","compile","wasmModule","instantiate","exports","memory","utf8decoder","Module","Function","Promise","resolve","reject","wasmBinary","onRuntimeInitialized","wasmMemory","create_error","init_res","arg","ArgValue","arg_index","arg_name_buffer","pointer","_set_arg_name","pWasmData","Uint8ClampedArray","_get_arg_index","create_last_error","argSize","argPointer","_set_arg","pWasmArgData","_exec","resSize","_get_result_size","resPointer","_get_result","result_data","pResultData","k","text","_get_last_error","_get_last_error_size","mod","inst","Go","importObject","run","resutl","_gowasm_setArg","_gowasm_lastError","_gowasm_execute","updateApp","handleCacheOper","handleDataView","handleDataDownload","handleManifestView","name","startCount","ext","blob","Blob","type","link","href","URL","createObjectURL","download","click","cm","cd","col6","cachedManifests","map","title","strDigest","viewManifestButton","cachedData","viewDataButton","DataDownloadButton","get_cached_manifests_size","get_cached_data_size","fetchManifestResult","fetchDataResult","defaultValue","handleFetch","handleDOIChange","handleClearDOI","fetchRes","id","onChange","display","evalResult","handleEval","btn","dep","getDependencies","init_manifest","rootManifest","showFormulas","handleFetchManifest","handleRemoveManifest","handleFetchData","handleRemoveData","handleViewData","updateManifest","setUpdateManifest","handleChangeManifestFocus","rawData","PopManifestFocusList","PushManifestFocusList","getCurrentManifest","updatedManifest","ManifestHeader","manifestDoi","manifestInCache","dataInCache","manifestMime","manifestSize","manifestS","toFixed","viewButton","ManifestControls","mC","pW","dC","dV","outStr","focus_button","ManifestFocusListIsEmpty","getManifestFormulas","getManifestHeader","getManifestControls","NavTabs","cacheIsShown","networkIsShown","data-toggle","aria-controls","aria-selected","handleHomePage","handleShowCache","handleShowNetwork","handleShowViewer","handleClearAll","App","setNewManifest","clear","getCache","getNetwork","forceUpdate","Boolean","location","hostname","match","RunButton","querySelectorAll","interactivePanel","querySelector","buttonElement","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e96ac18.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass BufImageGrey32 extends Component {\n    \n    constructor(props) \n    {\n        super(props)\n\n        this.state = {\n            data: props.data,\n        }\n    }\n    \n    componentWillMount () {\n\n        var data = new Uint8Array(this.state.data);\n        var dataView = new DataView(data.buffer);\n\n        const canvas = document.createElement('canvas')\n        const context = canvas.getContext('2d')\n\n        canvas.width = dataView.getUint32(0, false); // dx\n        canvas.height = dataView.getUint32(4, false); // dy\n\n        var currImageData = context.createImageData(canvas.width, canvas.height);\n\n        let size = canvas.width * canvas.height\n\n        for (var i = 0; i < size; i++)\n        {\n            var data_index = 8 + i * 4;\n            var r = dataView.getUint32(data_index, false) / 255\n\n            var image_index = i * 4;\n            currImageData.data[image_index] = r\n            currImageData.data[image_index+1] = r\n            currImageData.data[image_index+2] = r\n            currImageData.data[image_index+3] = 255\n        }\n\n        context.putImageData(currImageData, 0, 0);\n    \n        const dataURI = canvas.toDataURL()\n\n        this.setState({dataURI})\n      }\n    \n      render() {\n        return <img src={this.state.dataURI} alt=\"\" />\n      }\n}\n\nexport default BufImageGrey32;","import React from 'react';\nimport Draggable from 'react-draggable';\nconst PopupStyle = {\n\n\"position\":\"fixed\",\n\"top\":\"0\",\n\"left\":\"0\",\n\"right\":\"0\",\n\"bottom\":\"0\",\n\"maxWidth\" : \"50%\",\n\"maxHeight\" : \"50%\",\n\"margin\":\"auto\",\n\"borderRadius\":\"20px\",\n\"backgroundColor\":\"rgba(0,0,0, 0.6)\",\n\"zIndex\": \"10\",\n}\nconst InnerPopupStyle = \n\n{\"position\":\"absolute\",\n\"left\":\"5%\",\n\"right\":\"5%\",\n\"color\": \"#3d3d3d\",\n\"top\":\"10%\",\n\"bottom\":\"5%\",\n\"margin\":\"auto\",\n\"borderRadius\":\"20px\",\n\"background\":\"white\",\n\"text\":\"left\",\n\"overflow\" : \"auto\",\n}\n\nconst DataStyle = \n{\n  \"marginTop\":\"5%\",\n  \"marginBottom\":\"5%\",\n }\nconst butStyle = \n{\n  \"zIndex\" : \"50,\"\n}\n\nclass Popup extends React.Component {  \n  render() { \n\n   \nreturn (  \n  <Draggable\n        axis=\"both\"\n        handle=\".handle\"\n        defaultPosition={{x: 0, y: 0}}\n        position={null}\n        grid={[25, 25]}\n        scale={1}\n        onStart={this.handleStart}\n        onDrag={this.handleDrag}\n        onStop={this.handleStop}>\n    <div  style={PopupStyle} className='handle'>  \n<div className=\"d-flex justify-content-end m-0\">\n<button style={butStyle} className=\"btn btn-md btn-secondary bottom m-1\" onClick={this.props.closePopup}><span role=\"img\" aria-label=\"close\">&#10060;</span></button> \n</div>\n<div  style={InnerPopupStyle} className='popup\\_inner'>  \n<div style={DataStyle}>\n<pre className=\"text-left row m-2 container-fluid\">{this.props.data}</pre>\n </div>\n</div>  \n</div>  \n</Draggable>\n);  \n}  \n}  \n\nexport default Popup;","import React, { Component } from \"react\";\nimport BufImageGrey32 from \"./BufImageGrey32.js\";\nimport Popup from \"./Popup.js\";\n\nclass DataViewer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      application: props.application,\n      data: props.data,\n      doi: \"\",\n      viewerIsShown: props.viewerIsShown,\n      showData: props.showData,\n      cache: props.cache\n    };\n\n    if (this.state.application) {\n      this.updateDataView = this.updateDataView.bind(this);\n      this.state.application.setUpdateDataView(this.updateDataView);\n    }\n\n    this.clearDataView = this.clearDataView.bind(this);\n  }\n\n  clearDataView() {\n    this.updateDataView(null);\n  }\n\n  updateDataView(data_to_view) {\n    this.setState({\n     //data: this.state.cache.get_cached_manifests()\n      data: data_to_view\n    });\n  }\n\n  render() {\n    //console.log(this.state.cache.get_cached_manifests());\n\n    if (null == this.state.data)\n      return (\n        <div className=\"DataViewer p-2 bg-secondary rounded mb-0 text-white\">\n          {this.props.viewerIsShown ? (\n            <div>\n              <div className=\"col-md-12 font-weight-bold m-2\">DATA VIEW</div>\n              <div className=\"alert alert-success alert-dismissible fade show text-truncate text-left m-2\">\n                Fetch manifest and/or data\n              </div>{\" \"}\n            </div>\n          ) : null}\n        </div>\n      );\n\n    let clearBtn = \"\";\n    if (this.state.application)\n      clearBtn = (\n        <div>\n          <button\n            className=\"btn btn-sm btn-warning m-3\"\n            onClick={this.clearDataView}\n          >\n            Clear\n          </button>\n        </div>\n      );\n\n    let data_to_view =\n      \"Not supported to view MIME (\" + this.state.data.MIME + \")\";\n\n    if (-1 !== this.state.data.MIME.indexOf(\"text\")) {\n      if (0 !== this.state.data.data.length) {\n        let utf8decoder = new TextDecoder();\n        data_to_view = utf8decoder.decode(new Uint8Array(this.state.data.data));\n      } else data_to_view = \"{empty}\";\n    }\n\n    if (-1 !== this.state.data.MIME.indexOf(\"json\"))\n      data_to_view = JSON.stringify(this.state.data.data, undefined, 2);\n\n    if (-1 !== this.state.data.MIME.indexOf(\"manifest\"))\n      data_to_view = JSON.stringify(this.state.data.data.json, undefined, 2);\n\n    if (-1 !== this.state.data.MIME.indexOf(\"octet-stream\"))\n      data_to_view = this.stringFromOctetStream(this.state.data.data);\n\n    if (-1 !== this.state.data.MIME.indexOf(\"BufImage/Grey32\"))\n      data_to_view = <BufImageGrey32 data={this.state.data.data} />;\n\n    return this.props.viewerIsShown ? (\n      <div className=\"DataViewer bg-secondary rounded mb-0 text-white p-2\">\n        <div className=\"col-md-12 font-weight-bold m-2\">DATA VIEW</div>\n        <div className=\"alert alert-success alert-dismissible fade show text-truncate m-2\">\n          <pre className=\"text-left row m-2 container-fluid\">\n            {data_to_view}\n          </pre>\n        </div>\n        <div>{this.state.doi}</div>\n        <div className=\"col-md-12\">{clearBtn}</div>\n      </div>\n    ) : this.props.showData ? (\n      <Popup data={data_to_view} closePopup={this.props.dataTogglePopup} />\n    ) : null;\n  }\n\n  stringFromOctetStream(data) {\n    const maxCount = 50;\n    var str = \"\";\n    var count = data.length;\n\n    if (count > maxCount) {\n      count = maxCount;\n      str = \"First \" + maxCount + \" bytes: \";\n    }\n\n    for (var index = 0; index < count; ) {\n      var ch = data[index++];\n\n      var res = ch.toString(16).toUpperCase();\n\n      if (res.length === 1) res = \"0\" + res;\n\n      str += res;\n    }\n\n    return str;\n  }\n}\n\nexport default DataViewer;\n","require('../../scripts/engine.js')\nrequire('../../scripts/cache.js')\nrequire('../../scripts/network.js')\nrequire('../../scripts/server.js')\nrequire('../../scripts/formula.js')\nrequire('../../scripts/manifest.js')\nrequire('../../scripts/wasm.js')\nrequire('../../scripts/wasm_go')\n\nclass KolmoApplication\n{\n    constructor(dedicated_server_address, Use_localStorage)\n    {\n        let options = {\n            Network: {\n                DedicatedServer: dedicated_server_address\n            },\n            Cache: {\n                Use_localStorage: Use_localStorage\n            }\n        };\n\n        this.engine = new global.Engine(options)\n\n        this.update_manifest = null;\n        this.update_data_view = null;\n\n        this.current_manifest = null;\n        this.current_manifest_status = \"Not defined\";\n\n        this.manifest_focus_list = []\n    }\n\n    setUpdateManifest(update_manifest){\n        this.update_manifest = update_manifest\n    }\n\n    setUpdateDataView(update_data_view){\n        this.update_data_view = update_data_view\n    }\n\n    updateDataView(data)\n    {\n        if (null != this.update_data_view)\n            this.update_data_view(data)\n    }\n\n    getCache() {\n        return this.engine.cache()\n    }\n\n    getNetwork() {\n        return this.engine.network()\n    }\n\n    getCurrentManifest()\n    {\n        let result = {\n            status: \"ok\",\n            data: null\n        };\n\n        result.data = this.current_manifest;\n        result.status = this.current_manifest_status;\n\n        return result\n    }\n\n    setNewManifest(str_manifest)\n    {\n        if (null == str_manifest)\n        {\n            this.current_manifest = null;\n            this.current_manifest_status = \"Not defined\";\n\n            this.update_manifest();\n\n            return\n        }\n\n        this.manifest_focus_list = []\n\n        this.current_manifest = null;\n        this.current_manifest_status = \"Not defined\";\n\n        try\n        {\n            this.current_manifest = new global.Manifest(JSON.parse(str_manifest));\n            this.current_manifest_status = \"ok\";\n        }\n        catch(error)\n        {\n            this.current_manifest_status = \"Error creating manifest: \" + error\n        }\n\n        if (null !== this.update_manifest)\n            this.update_manifest();\n    }\n\n    PushManifestFocusList(manifest)\n    {\n        if (0 === this.manifest_focus_list.length)\n            this.manifest_focus_list.push({ data:this.current_manifest, status:this.current_manifest_status })\n        \n        this.manifest_focus_list.push({ data:manifest.data, status:manifest.status })\n\n        this.current_manifest = manifest.data;\n        this.current_manifest_status = manifest.status;\n\n        if (null !== this.update_manifest)\n            this.update_manifest();\n    }\n\n    PopManifestFocusList()\n    {\n        let manifest = this.manifest_focus_list.pop()\n\n        if (null != manifest)\n        {\n            manifest = this.manifest_focus_list.pop()\n\n            if (null != manifest)\n            {\n                this.current_manifest = manifest.data;\n                this.current_manifest_status = manifest.status;\n\n                if (null !== this.update_manifest)\n                    this.update_manifest();\n            }\n        }\n    }\n\n    ManifestFocusListIsEmpty(){\n        return (0 === this.manifest_focus_list.length) ? true : false\n    }\n}\n\nexport default KolmoApplication;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport KolmoApplication from '../KolmoApplication.js';\nimport DataViewer from './DataViewer';\n\nclass ViewButton extends Component {\n\n    constructor(props) \n    {\n        super(props)\n\n        this.state = {\n            textAreaID: props.textAreaID,\n            manifestDataHolderID: props.manifestDataHolderID,\n            viewerIsShown: false,\n            showData: false,\n            \n            \n        }\n\n        this.actionClick = this.actionClick.bind(this)\n    }\n    \n    \n\n    actionClick(event)\n    {\n        ReactDOM.unmountComponentAtNode(document.getElementById(this.state.manifestDataHolderID));\n\n        let btn_caption = event.target.innerHTML;\n\n        event.target.innerHTML = \"evaluating...\";\n\n        this.setState({ viewerIsShown : !this.state.viewerIsShown}); \n       \n        \n        let application = new KolmoApplication(process.env.REACT_APP_DEDICATED_SERVER_ADDRESS, false);\n\n        let data_to_view = { MIME:\"\", data:\"\" };\n\n        let manifest = null;\n\n        try\n        {\n            let manifestText = document.getElementById(this.state.textAreaID).value\n            \n            manifest = new global.Manifest(JSON.parse(manifestText))\n        }\n        catch(error)\n        {\n            data_to_view.MIME = \"text\"\n            data_to_view.data = new Uint8Array(Buffer.from(\"\"+error))\n        }\n\n        if (null == manifest)\n        {\n            ReactDOM.render(<DataViewer viewerIsShown={this.state.viewerIsShown} showData={this.state.showData} data={data_to_view}/>, document.getElementById(this.state.manifestDataHolderID));\n\n            event.target.innerHTML = btn_caption;\n\n            return;\n        }\n\n        manifest.target = event.target\n        manifest.btn_caption = btn_caption\n\n        application.engine.eval_manifest(manifest).then(data =>{\n        \n            manifest.target.innerHTML = manifest.btn_caption\n\n            if (data.data.MIME)\n                data_to_view.MIME = data.data.MIME\n            else\n                data_to_view.MIME = \"text\"\n\n            data_to_view.data = data.data\n\n            ReactDOM.render( <DataViewer viewerIsShown={this.state.viewerIsShown} showData={this.state.showData} data={data_to_view}/>, document.getElementById(this.state.manifestDataHolderID));\n        })\n        \n    }\n\n    render() {\n        return (\n            <button className=\"btn btn-sm btn-warning m-2 float-center\" onClick={this.actionClick}>View Data</button>\n        )\n    }\n}\n\nexport default ViewButton;","(() => {\n\n    if (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export (neither global, window nor self is defined)\");\n    }\n    \n    global.Engine = class {\n\n        constructor(settings) {\n\n            if ( settings.hasOwnProperty(\"Cache\") )\n                this.Cache = new global.Cache(settings[\"Cache\"])\n            else\n                this.Cache = new global.Cache();\n\n            if ( settings.hasOwnProperty(\"Network\") )\n            {\n                this.Network = new global.Network(settings[\"Network\"], this.Cache);\n                return;\n            }\n            throw new Error(\"Bad engine settings\");\n        }\n\n        network()\n        {\n            return this.Network;\n        }\n\n        cache()\n        {\n            return this.Cache\n        }\n\n        async eval_manifest(manifest)\n        {\n            let result = {\n                status: \"\",\n                data: [],\n            };\n\n            let raw_value = manifest.get_raw_value()\n            if (\"ok\" === raw_value.status)\n            {\n                result.status = \"ok\";\n                result.data = raw_value.data;\n\n                return result;\n            }\n\n            let data = await this.Network.search_data(manifest)\n            if (\"ok\" === data.status)\n            {\n                result.status = \"ok\";\n                result.data = data.data;\n\n                return result;\n            }\n\n            let formulas = manifest.get_formulas()\n            if (0 === formulas.data.length) // probably manifest contains only doi, search full manifest from network\n            {\n                result.status = \"Manifest has no formulas\"\n\n                manifest = await this.Network.search_manifest(manifest)\n                if (\"ok\" !== manifest.status)\n                {\n                    result.status = manifest.status;\n                    return result\n                }\n                else\n                    manifest = manifest.data\n            }\n\n            // search best formula\n            let formulas_data = await this.get_formulas_datainfo(manifest)\n            if ( \"ok\" === formulas_data.status )\n            {\n                let bestFormula = null\n                let minDiff = 0\n                for ( var i in formulas_data.data )\n                {\n                    let curDiff = formulas_data.data[i].NeedBytes - formulas_data.data[i].HasBytes\n\n                    if ( !bestFormula )\n                    {\n                        minDiff = curDiff\n                        bestFormula = formulas_data.data[i].Formula\n                    }\n\n                    if ( minDiff > curDiff )\n                    {\n                        minDiff = curDiff\n                        bestFormula = formulas_data.data[i].Formula\n                    }\n                }\n\n                if ( bestFormula )\n                {\n                    let data = await this.eval_formula( bestFormula )\n\n                    if (\"ok\" === data.status)\n                    {\n                        result.status = \"ok\";\n                        result.data = data.data;\n\n                        return result;\n                    }\n\n                    result.status = data.status;\n                }\n            }\n\n            return result;\n        }\n\n        async eval_formula(formula)\n        {\n            let result = {\n                status: \"\",\n                data: []\n            };\n\n            let dependencies = formula.get_dependencies();\n\n            if (\"ok\" === dependencies.status)\n            {\n                for ( var i in dependencies.data )\n                {\n                    let dep_data = await this.Network.search_data(dependencies.data[i]);\n\n                    if ( \"ok\" !== dep_data.status )\n                    {\n                        let data = await this.eval_manifest(dependencies.data[i])\n\n                        if ( \"ok\" !== data.status )\n                        {\n                            result.status = data.status;\n                            return result;\n                        }\n                    }\n                }\n            }\n            else\n            {\n                result.status = \"Formula has no dependencies\";\n                return result;\n            }\n\n            return await this.eval(formula);\n        }\n\n        async eval(formula)\n        {\n            let result = {\n                status: \"\",\n                source: null,\n                data: []\n            };\n\n            let doi_data_formula = null;\n\n            if ( formula.manifest )\n            {\n                let dois = formula.manifest.get_doi();\n\n                if ( \"ok\" === dois.status )\n                {\n                    for ( var doi in dois.data )\n                    {\n                        doi_data_formula = dois.data[doi];\n\n                        let cached_data = this.Cache.get_data_by_doi(doi_data_formula);\n                        \n                        if (\"ok\" === cached_data.status)\n                        {\n                            result.status = \"ok\";\n                            result.source = \"Cache\";\n                            result.data = cached_data.data;\n\n                            return result;\n                        }\n                    }\n                }\n            }\n\n            let dependencies_data = new Map();\n\n            let dependencies = formula.get_dependencies();\n\n            if (\"ok\" === dependencies.status)\n            {\n                for ( var dependency_manifest in dependencies.data )\n                {\n                    let manifest = dependencies.data[dependency_manifest];\n                    \n                    let manifest_data = await this.Cache.get_data_by_manifest(manifest);\n\n                    if ( \"ok\" === manifest_data.status )\n                        dependencies_data.set( manifest.ArgName, manifest_data.data );\n                    else\n                    {\n                        let raw_value = manifest.get_raw_value()\n                        if (\"ok\" === raw_value.status)\n                            dependencies_data.set( manifest.ArgName, raw_value.data );\n                        else\n                        {\n                            result.status = \"Cache has no data for dependency: \" + manifest.ArgName;\n                            return result;\n                        }\n                    }\n                }\n            }\n            else\n            {\n                result.status = \"Formula has no dependencies\";\n                return result;\n            }\n\n            let eval_result = await formula.eval(dependencies_data);\n\n            if ( \"ok\" === eval_result.status )\n            {\n                //TODO: let check_result = formula.manifest.check_data(eval_result.data);\n                \n                result.status = \"ok\";\n                result.source = \"Evaluation\";\n                result.data = eval_result.data;\n\n                if ( doi_data_formula )\n                    this.Cache.set_data_by_doi(eval_result.data, doi_data_formula);\n            }\n            else\n                result.status = \"Error evaluation formula (\" + eval_result.status + \")\";\n\n            return result;\n        }\n\n        async get_manifest_datainfo(manifest)\n        {\n            let result = {\n                status: \"Manifest has no data info\",\n                data: null\n            };\n\n            let search_manifest_result = await this.Network.search_manifest(manifest)\n            if ( \"ok\" === search_manifest_result.status )\n                manifest = search_manifest_result.data\n\n            // check RawValue presence\n            let rawValue = manifest.get_raw_value()\n            if ( \"ok\" === rawValue.status )\n            {\n                result.status = \"ok\"\n                result.data = {\n                    Source: \"RawValue\",\n                    NeedBytes: rawValue.data.length,\n                    HasBytes: rawValue.data.length\n                }\n\n                return result\n            }\n\n            // check Cache presence\n            let dois = manifest.get_doi();\n            if ( \"ok\" === dois.status )\n            {\n                for ( var doi in dois.data )\n                {\n                    let cache_result = await this.Cache.get_data_by_doi(dois.data[doi])\n                    if ( \"ok\" === cache_result.status )\n                    {\n                        result.status = \"ok\"\n                        result.data = {\n                            Source: \"Cache\",\n                            NeedBytes: cache_result.data.length,\n                            HasBytes: cache_result.data.length\n                        }\n\n                        return result\n                    }\n                }\n            }\n\n            // has no formulas\n            let formulas = manifest.get_formulas().data\n            if ( 0 === formulas.length )\n            {\n                let size_result = manifest.get_size()\n                if ( \"ok\" === size_result.status )\n                {\n                    result.status = \"ok\"\n                    result.data = {\n                        Source: \"Manifest\",\n                        NeedBytes: size_result.data,\n                        HasBytes: 0\n                    }\n\n                    return result\n                }\n            }\n            else\n            {\n                let formulas_result = await this.get_formulas_datainfo(manifest)\n                if ( \"ok\" === formulas_result.status )\n                {\n                    result.data = {\n                        Source: \"\",\n                        NeedBytes: 0,\n                        HasBytes: 0\n                    }\n\n                    for ( var i in formulas_result.data )\n                    {\n                        if ((0 == result.data.NeedBytes) && (0 == result.data.HasBytes))\n                        {\n                            result.data.Source = formulas_result.data[i].Source\n                            result.data.NeedBytes = formulas_result.data[i].NeedBytes\n                            result.data.HasBytes = formulas_result.data[i].HasBytes\n                        }\n                        \n                        let myDif = result.data.NeedBytes - result.data.HasBytes\n                        let formulaDiff = formulas_result.data[i].NeedBytes - formulas_result.data[i].HasBytes\n\n                        if ( myDif > formulaDiff )\n                        {\n                            result.data.Source = formulas_result.data[i].Source\n                            result.data.NeedBytes = formulas_result.data[i].NeedBytes\n                            result.data.HasBytes = formulas_result.data[i].HasBytes\n                        }\n                    }\n\n                    if ( 0 != result.data.NeedBytes )\n                        result.status = \"ok\"\n\n                    return result\n                }\n            }\n\n            return result\n        }\n\n        async get_formulas_datainfo(manifest)\n        {\n            let result = {\n                status: \"Formulas has no data info\",\n                data: []\n            };\n\n            // get formulas\n            let formulas = manifest.get_formulas().data\n            if (0 === formulas.length)\n            {\n                let search_manifest_result = await this.Network.search_manifest(manifest)\n                if ( \"ok\" === search_manifest_result.status )\n                    formulas = search_manifest_result.data.get_formulas().data\n            }\n            for ( var i in formulas )\n            {\n                result.status = \"ok\"\n\n                let formula_info = {\n                    Source: formulas[i].json[\"AlgorithmID\"],\n                    Formula: formulas[i],\n                    NeedBytes: 0,\n                    HasBytes: 0,\n                }\n\n                let dependencies_result = formulas[i].get_dependencies()\n                if ( \"ok\" === dependencies_result.status )\n                {\n                    let depIndex = new Map()\n                    for ( var j in dependencies_result.data )\n                    {\n                        let dependency = dependencies_result.data[j]\n                        \n                        let AddResults = true\n                        let get_doi_result = dependency.get_doi()\n                        if ( \"ok\" === get_doi_result.status )\n                        {\n                            let doi = get_doi_result.data[0]\n                            if ( !depIndex.get(doi) ) \n                                depIndex.set(doi, true)\n                            else\n                                AddResults = false\n                        }\n\n                        let manifest_datainfo_result = await this.get_manifest_datainfo(dependency)\n                        if ( \"ok\" === manifest_datainfo_result.status )\n                        {\n                            if ( AddResults )\n                            {\n                                formula_info.NeedBytes += manifest_datainfo_result.data.NeedBytes\n                                formula_info.HasBytes += manifest_datainfo_result.data.HasBytes\n                            }\n                        }\n                    }\n                }\n\n                result.data.push( formula_info )\n            }\n\n            return result\n        }\n\n    }\n})();","(() => {\n\n    if (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export (neither global, window nor self is defined)\");\n    }\n    \n    let MANIFEST_PREFIX = \"/manifest/\"\n    let RAWDATA_PREFIX = \"/rawdata/\"\n\n    global.Cache = class {\n\n        constructor(settings) {\n            this.Use_localStorage = true\n            this.innerStorage = new Map();\n\n            if ( settings )\n            {\n                if ( settings.hasOwnProperty(\"Use_localStorage\") )\n                    this.Use_localStorage = settings[\"Use_localStorage\"]\n            }\n        }\n\n        get_manifest_by_doi(doi)\n        {\n            let result = {\n                status: \"Not found\",\n                data: null\n            };\n\n            let key = MANIFEST_PREFIX + doi\n\n            if ( this.Use_localStorage )\n            {\n                try\n                {\n                    let manifest = localStorage.getItem(key)\n\n                    if ( manifest )\n                    {\n                        result.status = \"ok\";\n                        result.data = new global.Manifest(JSON.parse(manifest));\n\n                        return result\n                    }\n                }\n                catch(error)\n                {\n                    console.log(\"get_manifest_by_doi, localStorage.getItem error: \" + error)\n                }\n            }\n            \n            let manifest = this.innerStorage.get(key)\n\n            if ( manifest )\n            {\n                result.status = \"ok\";\n                result.data = manifest;\n            }\n\n            return result;\n        }\n\n        set_manifest_by_doi(manifest, doi)\n        {\n            let key = MANIFEST_PREFIX + doi\n\n            if ( this.Use_localStorage )\n            {\n                try\n                {\n                    localStorage.setItem(key, manifest.ToString())\n                    \n                    return\n                }\n                catch(error)\n                {\n                    console.log(\"set_manifest_by_doi, localStorage.setItem error: \" + error)\n                }\n            }\n\n            this.innerStorage.set(key, manifest)\n        }\n\n        delete_manifest_by_doi(doi)\n        {\n            let key = MANIFEST_PREFIX + doi\n\n            if ( this.Use_localStorage )\n            {\n                try\n                {\n                    if ( localStorage.getItem(key) ) \n                    {\n                        localStorage.removeItem(key)\n\n                        return true\n                    }\n                }\n                catch(error)\n                {\n                    console.log(\"delete_manifest_by_doi, localStorage error: \" + error)\n                }\n            }\n\n            return this.innerStorage.delete(key)\n        }\n\n        get_data_by_doi(doi)\n        {\n            let result = {\n                status: \"Not found\",\n                data: null\n            };\n\n            let key = RAWDATA_PREFIX + doi\n\n            let raw_data = null;\n            \n            if ( this.Use_localStorage )\n            {\n                try\n                {\n                    raw_data = localStorage.getItem(key)\n\n                    if ( raw_data )\n                    {\n                        result.status = \"ok\";\n\n                        let length = Math.ceil(raw_data.length / 2)\n\n                        result.data = new Uint8Array(length);\n\n                        for (var i = 0; i < length; i++)\n                            result.data[i] = parseInt(raw_data.substr(i * 2, 2), 16)\n\n                        return result;\n                    }\n                }\n                catch(error)\n                {\n                    console.log(\"get_data_by_doi, localStorage.getItem error: \" + error)\n                }\n            }\n\n            if ( !raw_data )\n            {\n                raw_data = this.innerStorage.get(key)\n\n                if ( raw_data )\n                {\n                    result.status = \"ok\";\n                    result.data = raw_data;\n                }\n            }\n\n            return result;\n        }\n\n        get_data_by_manifest(manifest)\n        {\n            let result = {\n                status: \"Not found\",\n                data: null\n            };\n\n            let dois = manifest.get_doi();\n\n            if ( \"ok\" === dois.status )\n            {\n                for ( var doi in dois.data )\n                {\n                    let data = this.get_data_by_doi(dois.data[doi]);\n\n                    if ( \"ok\" === data.status )\n                    {\n                        result.status = \"ok\";\n                        result.data = data.data;\n\n                        return result;\n                    }\n                }\n            }\n            else\n                result.status = \"Manifest has no doi\";\n\n            return result;\n        }\n\n        set_data_by_doi(data, doi)\n        {\n            let key = RAWDATA_PREFIX + doi\n\n            let array_data = new Uint8Array(data);\n\n            if ( this.Use_localStorage )\n            {\n                let value = \"\"\n                for( var i = 0; i < array_data.length; i++ ){\n                    value += array_data[i].toString(16).padStart(2, \"0\")\n                }\n\n                try\n                {\n                    localStorage.setItem(key, value)\n\n                    return\n                }\n                catch(error)\n                {\n                    console.log(\"set_data_by_doi, localStorage.setItem error: \" + error)\n                }\n            }\n\n            this.innerStorage.set(key, array_data)\n        }\n\n        delete_data_by_doi(doi)\n        {\n            let key = RAWDATA_PREFIX + doi\n\n            if ( this.Use_localStorage )\n            {\n                try\n                {\n                    if ( localStorage.getItem(key) ) \n                    {\n                        localStorage.removeItem(key)\n\n                        return true\n                    }\n                }\n                catch(error)\n                {\n                    console.log(\"delete_data_by_doi, localStorage error: \" + error)\n                }\n            }\n\n            return this.innerStorage.delete(key)\n        }\n\n        clear()\n        {\n            let cached_manifests = this.get_cached_manifests()\n            for (var i = 0; i < cached_manifests.length; i++) {\n                this.delete_manifest_by_doi(cached_manifests[i].doi)\n            }\n\n            let cached_data = this.get_cached_data()\n            for (var i = 0; i < cached_data.length; i++) {\n                this.delete_data_by_doi(cached_data[i].doi)\n            }\n\n            let size = cached_manifests.length + cached_data.length\n\n            return (0 !== size) ? true : false\n        }\n\n        get_cached_manifests()\n        {\n            let result = []\n\n            if ( this.Use_localStorage )\n            {\n                try\n                {\n                    for (var i = 0; i < localStorage.length; i++) {\n\n                        let key = localStorage.key(i)\n                        \n                        if (true === key.startsWith(MANIFEST_PREFIX))\n                        {\n                            let doi = key.replace(MANIFEST_PREFIX,\"\")\n\n                            let manifest = this.get_manifest_by_doi(doi).data\n\n                            result.push({ doi:doi, value:manifest });\n                        }\n\n                    }\n                }\n                catch(error)\n                {\n                    console.log(\"get_cached_manifests, localStorage error: \" + error)\n                }\n            }\n\n            for (var key of this.innerStorage.keys())\n            {\n                if (true === key.startsWith(MANIFEST_PREFIX))\n                {\n                    let doi = key.replace(MANIFEST_PREFIX,\"\")\n\n                    let manifest = this.get_manifest_by_doi(doi).data\n\n                    result.push({ doi:doi, value:manifest });\n                }\n\n            }\n\n            return result\n        }\n\n        get_cached_manifests_size()\n        {\n            let result = 0;\n\n            if ( this.Use_localStorage )\n            {\n                try\n                {\n                    for (var i = 0; i < localStorage.length; i++) {\n\n                        let key = localStorage.key(i)\n                        \n                        if (true === key.startsWith(MANIFEST_PREFIX))\n                            result++;\n\n                    }\n                }\n                catch(error)\n                {\n                    console.log(\"get_cached_manifests_size, localStorage error: \" + error)\n                }\n            }\n\n            for (var key of this.innerStorage.keys()) \n            {\n                if (true === key.startsWith(MANIFEST_PREFIX))\n                    result++;\n            }\n\n            return result\n        }\n\n        get_cached_data()\n        {\n            let result = []\n\n            if ( this.Use_localStorage )\n            {\n                try\n                {\n                    for (var i = 0; i < localStorage.length; i++) {\n\n                        let key = localStorage.key(i)\n                        \n                        if (true === key.startsWith(RAWDATA_PREFIX))\n                        {\n                            let doi = key.replace(RAWDATA_PREFIX,\"\")\n\n                            let data = this.get_data_by_doi(doi).data\n\n                            result.push({ doi:doi, value:data });\n                        }\n\n                    }\n                }\n                catch(error)\n                {\n                    console.log(\"get_cached_data, localStorage error: \" + error)\n                }\n            }\n\n            for (var key of this.innerStorage.keys()) {\n                \n                if (true === key.startsWith(RAWDATA_PREFIX))\n                {\n                    let doi = key.replace(RAWDATA_PREFIX,\"\")\n\n                    let data = this.get_data_by_doi(doi).data\n\n                    result.push({ doi:doi, value:data });\n                }\n\n            }\n\n            return result\n        }\n\n        get_cached_data_size()\n        {\n            let result = 0;\n\n            if ( this.Use_localStorage )\n            {\n                try\n                {\n                    for (var i = 0; i < localStorage.length; i++) {\n\n                        let key = localStorage.key(i)\n                        \n                        if (true === key.startsWith(RAWDATA_PREFIX))\n                            result++;\n\n                    }\n                }\n                catch(error)\n                {\n                    console.log(\"get_cached_data_size, localStorage error: \" + error)\n                }\n            }\n\n            for (var key of this.innerStorage.keys()) \n            {\n                if (true === key.startsWith(RAWDATA_PREFIX))\n                    result++;\n            }\n\n            return result\n        }\n    }\n})();","(() => {\n\n    if (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export (neither global, window nor self is defined)\");\n\t}\n\n    global.Network = class {\n        \n        constructor(settings, cache)\n        {\n            this.Cache = cache;\n\n            if ( settings.hasOwnProperty(\"DedicatedServer\") )\n            {\n                this.DedicatedServer = new global.Server(settings[\"DedicatedServer\"]);\n\n                return;\n            }\n\n            throw new Error(\"Bad network settings\");\n        }\n\n        async search_manifest(manifest)\n        {\n            let result = {\n                status: \"Not found\",\n                source: null,\n                data: null\n            };\n\n            let dois = manifest.get_doi();\n\n            if ( 0 === dois.data.length )\n            {\n                result.status = \"Manifest has no doi\";\n                return result;\n            }\n\n            if ( this.DedicatedServer )\n            {\n                for ( let doi in dois.data )\n                {\n                    let search_result = await this.search_manifest_by_doi(dois.data[doi]);\n\n                    if ( \"ok\" === search_result.status )\n                    {\n                        result.status = \"ok\";\n                        result.source = search_result.source;\n                        result.data = search_result.data;\n\n                        return result;\n                    }\n                    else\n                        result.status = search_result.status;\n                }\n            }\n\n            return result;\n        }\n\n        async search_manifest_by_doi(doi)\n        {\n            let result = {\n                status: \"\",\n                source: null,\n                data: null\n            };\n\n            if ( \"\" == doi )\n            {\n                result.status = \"Empty doi\"\n                return result\n            }\n\n            if ( this.DedicatedServer )\n            {\n                let manifest = this.Cache.get_manifest_by_doi(doi);\n\n                if ( \"ok\" === manifest.status )\n                {\n                    result.status = \"ok\";\n                    result.source = \"Cache\";\n                    result.data = manifest.data;\n                }\n                else\n                {\n                    let json_manifest = await this.DedicatedServer.get_manifest_by_doi(doi);\n\n                    if ( \"ok\" === json_manifest.status )\n                    {\n                        try\n                        {\n                            let manifest = new global.Manifest(json_manifest.data);\n\n                            result.status = \"ok\";\n                            result.source = \"Network\";\n                            result.data = manifest;\n\n                            this.Cache.set_manifest_by_doi(manifest, doi);                        \n                        }\n                        catch(error)\n                        {\n                            result.status = \"Not valid manifest (\" + error + \")\";\n                        }\n                    }\n                    else\n                    {\n                        result.status = json_manifest.status;\n                    }\n                }\n            }\n            else\n            {    \n                result.status = \"Not implimented\";\n            }\n\n            return result;\n        }\n\n        async search_data(manifest)\n        {\n            let result = {\n                status: \"Not found\",\n                source: null,\n                data: null\n            };\n\n            let dois = manifest.get_doi();\n\n            if ( 0 === dois.data.length )\n            {\n                result.status = \"Manifest has no doi\";\n                return result;\n            }\n\n            if ( this.DedicatedServer )\n            {\n                for ( let doi in dois.data )\n                {\n                    let search_result = await this.search_data_by_doi(dois.data[doi]);\n\n                    if ( \"ok\" === search_result.status )\n                    {\n                        result.status = \"ok\";\n                        result.source = search_result.source;\n                        result.data = search_result.data;\n\n                        return result;\n                    }\n                    else\n                        result.status = search_result.status;\n                }\n            }\n\n            return result;\n        }\n\n        async search_data_by_doi(doi)\n        {\n            let result = {\n                status: \"\",\n                source: null,\n                data: null\n            };\n\n            if ( this.DedicatedServer )\n            {\n                let data = this.Cache.get_data_by_doi(doi);\n\n                if ( \"ok\" === data.status )\n                {\n                    result.status = \"ok\";\n                    result.source = \"Cache\";\n                    result.data = data.data;\n\n                    return result;\n                }\n\n                let server_data = await this.DedicatedServer.get_data_by_doi(doi);\n\n                if ( \"ok\" === server_data.status )\n                {\n                    result.status = \"ok\";\n                    result.source = \"Network\";\n                    result.data = server_data.data;\n\n                    this.Cache.set_data_by_doi(server_data.data, doi);\n\n                    return result;\n                }\n                else\n                {\n                    result.status = server_data.status;\n                }\n            }\n            else\n            {    \n                result.status = \"Not implimented\";\n            }\n\n            return result;\n        }\n    }\n})();","(() => {\n\n    if (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export (neither global, window nor self is defined)\");\n\t}\n\n    global.Server = class {\n\n        constructor(address)\n        {\n            this.address = address;\n        }\n\n        async get_manifest_by_doi(doi)\n        {\n            let result = {\n                status: \"\",\n                data: null\n            };\n        \n            let url = this.address + '/manifest/' + doi;\n\n            try\n            {\n                let response = await fetch(url);\n\n                try\n                {\n                    if (200 === response.status) {\n\n                        let json_data = await response.json();\n\n                        result.data = json_data;\n\n                        result.status = \"ok\";\n                    }\n                    else\n                    {\n                        result.status = \"Response error: \" + response.statusText;\n                    }\n                }\n                catch(error)\n                {\n                    result.status = \"Error parsing request (\" + error + \")\";\n                }\n\n            }\n            catch(error)\n            {\n                result.status = \"Error requesting server (\" + error + \")\";\n            }\n\n            return result;\n        }\n\n        async get_data_by_doi(doi)\n        {\n            let result = {\n                status: \"\",\n                data: null\n            };\n        \n            let url = this.address + '/rawdata/' + doi;\n\n            try\n            {\n                let response = await fetch(url);\n\n                if (200 === response.status) {\n\n                    let raw_data = await response.arrayBuffer();\n\n                    result.data = raw_data;\n\n                    result.status = \"ok\";\n                }\n                else\n                {\n                    result.status = \"Response error: \" + response.statusText;\n                }\n            }\n            catch(error)\n            {\n                result.status = \"Error requesting server (\" + error + \")\";\n            }\n\n            return result;\n        }\n    }\n})();","(() => {\n\n    if (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export (neither global, window nor self is defined)\");\n    }\n    \n    global.Formula = class {\n\n        constructor(json, manifest)\n        {\n            this.json = json;\n            this.manifest = manifest;\n\n            this.wasm = null;\n            this.jsglue = null;\n            this.jsglue_go = null;\n            this.parameters = [];\n\n            // validate actor\n            if ( !this.json.hasOwnProperty(\"actor\") )\n                throw new Error(\"Not found required property actor\");\n            \n            if( !this.json.actor.hasOwnProperty(\"wasm\") )\n                throw new Error(\"Not found required property actor.wasm\");\n            \n            this.wasm = new global.Manifest(this.json.actor.wasm);\n            this.wasm.ArgName = \"actor.wasm\";\n\n            if( this.json.actor.hasOwnProperty(\"jsglue\") )\n            {\n                this.jsglue = new global.Manifest(this.json.actor.jsglue);\n                this.jsglue.ArgName = \"actor.jsglue\";\n            }\n\n            if( this.json.actor.hasOwnProperty(\"jsglue_go\") )\n            {\n                this.jsglue_go = new global.Manifest(this.json.actor.jsglue_go);\n                this.jsglue_go.ArgName = \"actor.jsglue_go\";\n            }\n\n            // validate parameters\n            if ( !this.json.hasOwnProperty(\"parameters\") )\n                throw new Error(\"Not found required property parameters\");\n\n            for ( var parameter in this.json.parameters )\n            {   \n                let param = new global.Manifest(this.json.parameters[parameter]);\n\n                param.ArgName = parameter;\n\n                this.parameters.push(param);\n            };    \n        }\n\n        get_dependencies()\n        {\n            let result = {\n                status: \"ok\",\n                data: []\n            };\n\n            result.data.push(this.wasm);\n\n            if ( this.jsglue )\n                result.data.push(this.jsglue);\n\n            if ( this.jsglue_go )\n                result.data.push(this.jsglue_go);\n\n            this.parameters.forEach(parameter => {\n                result.data.push(parameter);\n            });\n\n            return result;\n        }\n\n        async eval(dependencies_data)\n        {\n            let result = {\n                status: \"\",\n                data: []\n            };\n\n            let wasm = dependencies_data.get(\"actor.wasm\");\n\n            if ( null === wasm )\n            {\n                result.status = \"Evaluation failed, has no actor.wasm data\";\n                return result;\n            }\n\n            let jsglue = null;\n            let jsglue_go = null;\n\n            if ( this.jsglue )\n            {\n                jsglue = dependencies_data.get(\"actor.jsglue\");\n\n                if ( null == jsglue )\n                {\n                    result.status = \"Evaluation failed, has no actor.jsglue data\";\n                    return result;\n                }   \n            }\n\n            if ( this.jsglue_go )\n            {\n                jsglue_go = dependencies_data.get(\"actor.jsglue_go\");\n\n                if ( null == jsglue_go )\n                {\n                    result.status = \"Evaluation failed, has no actor.jsglue_go data\";\n                    return result;\n                }   \n            }\n\n            let args = new Map();\n            \n            for ( var parameter in this.parameters )\n            {\n                let ArgName = this.parameters[parameter].ArgName;\n                \n                let arg_data = dependencies_data.get(ArgName);\n            \n                if ( null == arg_data )\n                {\n                    result.status = \"Evaluation failed, has no \" + ArgName + \" data\";\n                    return result;\n                }\n                \n                args.set(ArgName, arg_data);\n            }\n\n            var wasm_wrapper = null\n\n            if ( jsglue_go )\n                wasm_wrapper = new global.WasmGo(wasm, jsglue_go);\n            else\n                wasm_wrapper = new global.Wasm(wasm, jsglue);\n\n            result = await wasm_wrapper.init();\n\n            if ( \"ok\" === result.status )\n            {\n                result = await wasm_wrapper.exec(args);\n\n                if ( \"ok\" === result.status )\n                {\n                    if ( this.manifest )\n                    {\n                        let mime = this.manifest.get_mime();\n                        \n                        if ( \"ok\" === mime.status )\n                            result.data.MIME = mime.data;\n                    }\n                }\n            }\n\n            await wasm_wrapper.un_init();\n            \n            return result;\n        }\n    }\n})();","(() => {\n\n    if (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export (neither global, window nor self is defined)\");\n    }\n    \n    global.Manifest = class {\n\n        constructor(json)\n        {\n            this.json = json;\n            \n            // TODO: Implement validation RULES:\n            // 1. has no doi -> HAVE TO own raw value or at least one formula\n            // 2. has no MIME -> HAVE TO own doi or at least one formula\n        }\n\n        ToString()\n        {\n            return JSON.stringify(this.json)\n        }\n\n        get_mime()\n        {\n            let result = {\n                status: \"Has no MIME\",\n                data: null\n            };\n\n            if ( this.json.hasOwnProperty(\"MIME\") )\n            {\n                result.status = \"ok\";\n                result.data = this.json.MIME;\n            }\n\n            return result;\n        }\n\n        get_size()\n        {\n            let result = {\n                status: \"Has no size\",\n                data: null\n            };\n\n            if ( this.json.hasOwnProperty(\"size\") )\n            {\n                result.status = \"ok\";\n                result.data = this.json.size;\n            }\n\n            return result;\n        }\n\n        get_raw_value()\n        {\n            let result = {\n                status: \"Has no raw\",\n                data: []\n            };\n\n            if ( this.json.hasOwnProperty(\"raw\") )\n            {\n                result.status = \"ok\";\n\n                result.data = new TextEncoder(\"utf-8\").encode(this.json.raw);  \n            }\n\n            return result;\n        }\n\n        get_doi()\n        {\n            let result = {\n                status: \"ok\",\n                data: []\n            };\n\n            if ( this.json.hasOwnProperty(\"doi\") )\n            {\n                for ( var doi in this.json.doi )\n                    result.data.push(this.json.doi[doi]);\n            }\n            else\n                result.status = \"Has no DOI\"\n\n            return result;\n        }\n\n        get_formulas()\n        {\n            let result = {\n                status: \"\",\n                data: []\n            };\n\n            if ( this.json.hasOwnProperty(\"formulas\") )\n            {\n                this.json.formulas.forEach(json_formula => {\n\n                    try\n                    {\n                        result.data.push( new global.Formula(json_formula, this) );\n                    }\n                    catch(error)\n                    {\n                        result.status += \"Error creating formula (\" + error + \") \";\n                    }\n\n                });\n            }\n\n            if ( \"\" === result.status )\n                result.status = \"ok\";\n\n            return result;\n        }\n    }\n})();","(() => {\n\n    if (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export (neither global, window nor self is defined)\");\n    }\n    \n    global.Wasm = class {\n\n        constructor(raw_wasm, jsglue)\n        {\n            this.raw_wasm = raw_wasm;\n            this.jsglue = jsglue;\n            this.wasm = null;\n            this.wasm_memory = null;\n        }\n\n        async un_init()\n        {\n            let result = {\n                status: \"ok\"\n            };\n\n            return result;\n        }\n\n        async init()\n        {\n            let result = {\n                status: \"ok\"\n            };\n\n            try\n            {\n                if ( null === this.wasm )\n                {\n                    if ( null === this.jsglue )\n                    {\n                        var wasmModule = await new WebAssembly.compile(this.raw_wasm);\n\n                        var wasm = await new WebAssembly.instantiate(wasmModule, []);\n\n                        this.wasm = wasm.exports;\n\n                        this.wasm_memory = this.wasm.memory;\n                    }\n                    else\n                    {\n                        let utf8decoder = new TextDecoder();\n\n                        var jsglue = utf8decoder.decode(this.jsglue);\n\n                        let Module = Function('\"use strict\";' + jsglue + 'return Module;')()\n                        \n                        await new Promise((resolve, reject) => {\n\n                            function onRuntimeInitialized(){\n                                resolve(\"onRuntimeInitialized\")\n                            }\n\n                            this.wasm = new Module({ \n                                wasmBinary: this.raw_wasm,\n                                onRuntimeInitialized: onRuntimeInitialized,\n                            })  \n                        })\n\n                        this.wasm_memory = this.wasm.wasmMemory;\n                    }\n                }\n            }\n            catch(error)\n            {\n                result.status = this.create_error(\"Exception while init: \" + error);\n            }\n\n            return result;\n        }\n\n        async exec(args)\n        {\n            let result = {\n                status: \"\",\n                data: []\n            };\n\n            try \n            {\n                let init_res = await this.init();\n\n                if ( \"ok\" === init_res.status )\n                {\n                    // fill args\n                    let arg = 0;\n                    for ( var [ArgName, ArgValue] of args )\n                    {\n                        // check argument for null\n                        if ( null == ArgValue )\n                        {\n                            result.status = this.create_error(\"Wrong usage, one of arguments is empty\");\n                            return result;\n                        }\n\n                        // lets findout argument index by name\n                        let arg_index = 0;\n                        {\n                            let arg_name_buffer = new TextEncoder(\"utf-8\").encode(ArgName);\n                            \n                            var size = arg_name_buffer.length;\n\n                            var pointer = this.wasm._set_arg_name(arg, arg_name_buffer.length);\n\n                            if ( 0 !== pointer )\n                            {\n                                var pWasmData = new Uint8ClampedArray(this.wasm_memory.buffer, pointer, size);\n\n                                for (var i = 0; i < pWasmData.length; i++) {\n                                    pWasmData[i] = arg_name_buffer[i];\n                                }\n\n                                arg_index = this.wasm._get_arg_index(arg);\n\n                                if ( 0 === arg_index )\n                                {\n                                    result.status = this.create_last_error();\n                                    return result;\n                                }\n                            }\n                            else\n                            {\n                                result.status = this.create_last_error();\n                                return result;\n                            }\n                        }\n\n                        // set arg data to Wasm\n                        var argSize = ArgValue.length;\n\n                        var argPointer = this.wasm._set_arg(arg_index, argSize);\n\n                        if ( 0 !== argPointer )\n                        {\n                            var pWasmArgData = new Uint8ClampedArray(this.wasm_memory.buffer, argPointer, argSize);\n\n                            for (var j = 0; j < pWasmArgData.length; j++) {\n                                pWasmArgData[j] = ArgValue[j];\n                            }\n                        }\n                        else\n                        {\n                            result.status = this.create_last_error();\n                            return result;\n                        }\n\n                        arg++;\n                    }\n\n                    // exec alg in wasm\n                    if ( this.wasm._exec() )\n                    {\n                        // get result\n                        var resSize = this.wasm._get_result_size();\n\n                        var resPointer = this.wasm._get_result();\n\n                        if ( 0 !== resPointer )\n                        {   \n                            let result_data = [];\n\n                            var pResultData = new Uint8ClampedArray(this.wasm_memory.buffer, resPointer, resSize);\n                            \n                            for (var k = 0; k < pResultData.length; k++) {\n                                result_data.push(pResultData[k]);\n                            }\n\n                            // TODO:\n                            // result[\"MIME\"] = this.wasm._get_result_type();\n\n                            result.status = \"ok\";\n                            result.data = result_data;\n                        }\n                        else\n                            result.status = this.create_last_error();\n                    }\n                    else\n                        result.status = this.create_last_error();\n                }\n                else\n                    result.status = this.create_error(\"Init error: \" + init_res.status);\n            } \n            catch(error) \n            {\n                result.status = this.create_error(\"Exception while exec: \" + error);\n            }\n\n            return result;\n        }\n\n        create_error(text)\n        {\n            return text;\n        }\n\n        create_last_error()\n        {\n            let pointer = this.wasm._get_last_error();\n\n            let size = this.wasm._get_last_error_size();\n\n            var pWasmData = new Uint8ClampedArray(this.wasm_memory.buffer, pointer, size);\n\n            let utf8decoder = new TextDecoder();\n\n            return this.create_error(utf8decoder.decode(pWasmData));\n        }\n    }\n})();","(() => {\n\n    if (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export (neither global, window nor self is defined)\");\n    }\n    \n    global.WasmGo = class {\n\n        constructor(raw_wasm, jsglue_go)\n        {\n            this.raw_wasm = raw_wasm;\n            this.jsglue_go = jsglue_go;\n            this.mod = null;\n            this.inst = null;\n            this.Go = null;\n\n            if (!this.raw_wasm)\n                throw new Error(\"Not specified raw_wasm object!\");\n\n            if (!this.jsglue_go)\n                throw new Error(\"Not specified jsglue_go object!\");\n        }\n\n        async un_init()\n        {\n            let result = {\n                status: \"ok\"\n            };\n\n            try \n            {\n                // TODO: if make call _gowasm_stop(); after 10 seconds will exception...\n                //_gowasm_stop();\n            } \n            catch(error) \n            {\n                result.status = \"Exception while un_init: \" + error;\n            }\n\n            return result;\n        }\n\n        async init()\n        {\n            let result = {\n                status: \"ok\"\n            };\n\n            try\n            {\n                if ( !this.inst )\n                {\n                    let utf8decoder = new TextDecoder();\n\n                    var jsglue_go = utf8decoder.decode(this.jsglue_go)\n\n                    this.Go = Function('\"use strict\";' + jsglue_go + 'return new Go();')()\n\n                    this.mod = await new WebAssembly.compile(this.raw_wasm);\n\n                    this.inst = await new WebAssembly.instantiate(this.mod, this.Go.importObject);\n\n                    this.Go.run(this.inst).then(resutl => {\n                        console.log(\"end run\")\n                    })\n                }\n            }\n            catch(error)\n            {\n                result.status = \"Exception while init: \" + error;\n            }\n\n            return result;\n        }\n\n        async exec(args)\n        {\n            let result = {\n                status: \"Not implemented\",\n                data: []\n            };\n\n            try // set arguments to the WASM\n            {\n                for ( var [ArgName, ArgValue] of args )\n                {\n                    if ( null == ArgValue )\n                    {\n                        result.status = \"Wrong usage, one of arguments is empty\";\n                        return result;\n                    }\n\n                    if ( !_gowasm_setArg( ArgName, ArgValue ) )\n                    {\n                        result.status = _gowasm_lastError();\n                        return result;\n                    }\n                }\n            } \n            catch(error) \n            {\n                result.status = \"Exception while setArg: \" + error;\n            }\n\n            try // execute WASM\n            {\n                let res = _gowasm_execute();\n                if ( res )\n                {\n                    result.status = \"ok\";\n                    result.data = res;\n                }\n                else\n                {\n                    result.status = _gowasm_lastError();\n                    return result;\n                }\n            } \n            catch(error) \n            {\n                result.status = \"Exception while execute: \" + error;\n            }\n\n            return result;\n        }\n    }\n})();","import React, { Component } from \"react\";\n\nconst startCount = 10;\nconst finishCount = 10;\n\nclass Cache extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cache: props.cache,\n      updateApp: props.updateApp,\n      application: props.application,\n      showData: props.showData\n    };\n\n    this.handleCacheOper = this.handleCacheOper.bind(this);\n    this.handleDataView = this.handleDataView.bind(this);\n    this.handleDataDownload = this.handleDataDownload.bind(this);\n    this.handleManifestView = this.handleManifestView.bind(this);\n  }\n\n  handleCacheOper(event) {\n    if (this.state.cache[event.target.name](event.target.value))\n      this.state.updateApp();\n  }\n\n  strDigest(data) {\n    let str = data;\n\n    if (typeof data !== \"string\") str = new Uint8Array(data).toString();\n\n    if (str.length > startCount + finishCount)\n      return (\n        str.substr(0, startCount) +\n        \"...\" +\n        str.substr(str.length - finishCount, finishCount)\n      );\n    else return str;\n  }\n\n  viewManifestButton(doi) {\n    return (\n      <button\n        className=\"btn btn-sm btn-success \"\n        onClick={this.handleManifestView}\n        value={doi}\n      >\n        View Manifest\n      </button>\n    );\n  }\n\n  handleManifestView(event) {\n    let manifest = this.state.cache.get_manifest_by_doi(event.target.value);\n    this.state.application.updateDataView({\n      MIME: \"manifest\",\n      data: manifest.data\n    });\n    this.props.dataTogglePopup();\n  }\n\n  viewDataButton(doi) {\n    let manifest = this.state.cache.get_manifest_by_doi(doi);\n    let data = this.state.cache.get_data_by_doi(doi);\n\n    if (manifest.status && data.status && manifest.data !== null)\n      return (\n        <button\n          className=\"btn btn-sm btn-success\"\n          onClick={this.handleDataView}\n          value={doi}\n        >\n          View Data\n        </button>\n      );\n    else return \"\";\n  }\n\n  handleDataView(event) {\n    let manifest = this.state.cache.get_manifest_by_doi(event.target.value);\n    let data = this.state.cache.get_data_by_doi(event.target.value);\n\n    this.state.application.updateDataView({\n      MIME: manifest.data.get_mime().data,\n      data: data.data\n    });\n    this.props.dataTogglePopup();\n    //console.log(this.props.showData);\n  }\n\n  DataDownloadButton(doi) {\n    let manifest = this.state.cache.get_manifest_by_doi(doi);\n    let data = this.state.cache.get_data_by_doi(doi);\n\n    if (\"ok\" === data.status && \"ok\" === manifest.status)\n      return (\n        <button\n          className=\"btn btn-sm btn-success m-1\"\n          onClick={this.handleDataDownload}\n          value={doi}\n        >\n          Download\n        </button>\n      );\n    else return \"\";\n  }\n\n  handleDataDownload(event) {\n    let manifest = this.state.cache.get_manifest_by_doi(event.target.value);\n\n    let mime = manifest.data.get_mime();\n    if (\"ok\" !== mime.status) return;\n\n    let doi = manifest.data.get_doi();\n    if (\"ok\" !== doi.status) return;\n\n    let ext = \"\";\n    if (\n      mime.data ===\n      \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n    )\n      ext = \".pptx\";\n\n    if (\n      mime.data ===\n      \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n    )\n      ext = \".docx\";\n\n    if (\n      mime.data ===\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    )\n      ext = \".xlsx\";\n\n    let data = this.state.cache.get_data_by_doi(event.target.value);\n\n    var blob = new Blob([data.data], { type: mime.data });\n    var link = document.createElement(\"a\");\n    link.href = window.URL.createObjectURL(blob);\n    link.download = doi.data[0] + ext;\n\n    link.click();\n  }\n\n  render() {\n    let cache = this.state.cache;\n\n    let cm = cache.get_cached_manifests();\n    let cd = cache.get_cached_data();\n    const col6 = \"col-md-6 alert alert-success alert-dismissible fade show\";\n\n    let cachedManifests = cm.map((value, i) => (\n      <div key={i} className=\"row\">\n        <div className={col6} title={value.doi}>\n          {\" \"}\n          {this.strDigest(value.doi)}\n        </div>\n        <div className={col6}>\n          {this.strDigest(JSON.stringify(value.value))}\n        </div>\n\n        <div className=\"col-md-6\">{this.viewManifestButton(value.doi)}</div>\n        <div className=\"col-md-6\">\n          <button\n            className=\"btn btn-sm btn-danger m-1\"\n            onClick={this.handleCacheOper}\n            name=\"delete_manifest_by_doi\"\n            value={value.doi}\n          >\n            Delete\n          </button>\n        </div>\n        <div className=\"col-md-12 p-2\"></div>\n      </div>\n    ));\n    let cachedData = cd.map(value => (\n      <div className=\"row\">\n        <div className={col6} title={value.doi}>\n          {this.strDigest(value.doi)}\n        </div>\n        <div className={col6}>\n          {this.strDigest(value.value)} Data length = {value.value.length}\n        </div>\n\n        <div className=\"col-md-6\">\n          {this.viewDataButton(value.doi)}\n          {this.DataDownloadButton(value.doi)}\n        </div>\n        <div className=\"col-md-6\">\n          <button\n            className=\"btn btn-sm btn-danger\"\n            onClick={this.handleCacheOper}\n            name=\"delete_data_by_doi\"\n            value={value.doi}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    ));\n\n    return (\n      <div\n        className=\"Cache col-lg-12 bg-secondary m-2 text-white\" /*style={{display: cache.get_cached_manifests_size() || cache.get_cached_data_size() !== 0 ? 'block' : 'none'}}*/\n      >\n        <div className=\"col-md-12 font-weight-bold\"> CACHE </div>\n\n        <div className=\"row m-2\">\n          <div className=\"col-md-6 text-md-left font-weight-bold p-1\">\n            Entity type\n          </div>\n          <div className=\"col-md-6 text-md-right font-weight-bold p-1\">\n            Count\n          </div>\n          <div className=\"col-md-12 border-bottom\"></div>\n        </div>\n\n        <div className=\"row m-2\">\n          <div className=\"col-md-11 text-md-left p-1\">Manifest</div>\n          <div className=\"col-md-1 alert alert-success alert-dismissible fade show p-1\">\n            {cache.get_cached_manifests_size()}\n          </div>\n        </div>\n        <div className=\"row m-2\">\n          <div className=\"col-md-11 text-md-left p-1\">Data</div>\n          <div className=\"col-md-1  alert alert-success alert-dismissible fade show p-1\">\n            {cache.get_cached_data_size()}\n          </div>\n        </div>\n        <div className=\"col-md-12 border-bottom\"></div>\n        <div className=\"col-md-12\">\n          <button\n            className=\"btn btn-sm btn-warning m-3\"\n            onClick={this.handleCacheOper}\n            name=\"clear\"\n            value=\"()\"\n          >\n            Clear\n          </button>\n        </div>\n\n        <div className=\"col-md-6 text-md-left font-weight-bold p-2\">DOI</div>\n        <div className=\"col-md-6 text-md-left font-weight-bold p-2\">\n          Manifest\n        </div>\n\n        {cachedManifests}\n\n        <div className=\"col-md-12 p-3 border-bottom\"></div>\n        <div className=\"col-md-6  text-md-left font-weight-bold p-2\">DOI</div>\n        <div className=\"col-md-6  text-md-left font-weight-bold p-2\">Data</div>\n\n        {cachedData}\n      </div>\n    );\n  }\n}\n\nexport default Cache;\n","import React, { Component } from 'react';\n\n\nclass Network extends Component {\n\n    constructor(props) \n    {\n        super(props)\n\n        this.state = {\n            network: props.network,\n            updateApp: props.updateApp,\n            fetchManifestResult: \"\",\n            fetchDataResult: \"\",\n            doi: \"\",\n            defaultValue: \"Pick DOI from the list\",\n        }\n\n        this.handleFetch = this.handleFetch.bind(this)\n        this.handleDOIChange = this.handleDOIChange.bind(this)\n        this.handleClearDOI = this.handleClearDOI.bind(this)\n    }\n\n    handleDOIChange(event)\n    {\n        this.setState({\n            doi: event.target.value\n        })\n    }\n\n    handleClearDOI() \n     {\n       this.setState({\n        doi: \"\"},  () => \n        console.log(this.state.doi));\n             }\n        \n    \n    async handleFetch(event)\n    {\n        let fetchRes = event.target.value\n\n        if (\"\" === this.state.doi)\n        {\n            this.setState({\n                [fetchRes]: \"Empty DOI\"\n            })\n\n            return\n        }\n\n        this.state.network[event.target.name](this.state.doi).then( res => {\n            \n            this.setState({\n                [fetchRes]: res.status\n            })\n\n            if (\"ok\" === res.status)\n                this.state.updateApp()\n        })\n    }\n\n    render()\n    \n    {\n\n        return (\n\n            <div className=\"Network p-1 bg-secondary rounded-lg text-white\">\n            \n\n                    <div className=\"col-md-12 font-weight-bold p-1\">NETWORK</div>\n                <div className=\"col-md-12\">\n                <select className=\"form-control alert-success alert-dismissible fade show p-2\" \n                id=\"dois\" onChange={this.handleDOIChange} value={this.state.doi}>\n                    <option defaultValue>Choose DOI from the list</option>\n                    <option value=\"03FEE1468FF693744FDEFB20D41E793E6A03CFBDD3687901EA99271DCC702DF8\">Doi 1 {this.state.doi}</option>\n                    <option value=\"00A66067BD93F5417D9E94858795B6E852EF90DE790C543B1E47A2E009D435F3\">Doi 2 {this.state.doi}</option>\n                    <option value=\"0487DEB729ABE42001007D1ADBEF310FE6BCBD308B7A889458F2E1F8B1C5D14E\">Doi 3 {this.state.doi}</option>\n                </select>\n                </div>\n               \n                   \n                                <div  style={{display: this.state.doi ? 'block' : 'none'}}>\n                                <div className=\"col-md-12\">\n                                <button className=\"btn btn-sm active btn-secondary m-3\" onClick={this.handleFetch} name=\"search_manifest_by_doi\" value=\"fetchManifestResult\">Fetch Manifest</button>\n\n                                <div className=\"col-md-12 alert alert-success\">{this.state.fetchManifestResult}</div></div>\n                          \n                                <div className=\"col-md-12\"><button className=\"btn btn-sm active btn-secondary m-3\" onClick={this.handleFetch} name=\"search_data_by_doi\" value=\"fetchDataResult\">Fetch Data</button>\n                                <div className=\"col-md-12 alert alert-success\" style={{display: this.state.doi ? 'block' : 'none'}}>{this.state.fetchDataResult}</div></div>\n\n                                <div className=\"col-md-12\"><button className=\"btn btn-sm btn-warning\" onClick={this.handleClearDOI} name=\"clear_DOI\">Clear</button> </div>\n                                </div>\n                          \n              </div>                             \n              \n\n            \n        );\n    }\n}\n\nexport default Network;","import React, { Component } from 'react';\nimport Manifest from './Manifest.js'\n\nclass Formula extends Component {\n    constructor(props) \n    {\n        super(props)\n\n        this.state = {\n            application: props.application,\n            updateApp: props.updateApp,\n            formula: props.formula,\n            cache: props.application.engine.cache(),\n            network: props.application.engine.network(),\n            evalResult: \"\",\n            dataTogglePopup: props.dataTogglePopup,\n        }\n\n        this.handleEval = this.handleEval.bind(this)\n        \n    }\n\n    \n    handleEval(event)\n    {\n        let btn = event.target\n        let btn_caption = event.target.innerHTML\n\n        event.target.innerHTML = \"evaluating...\";\n\n        this.state.application.engine.eval(this.state.formula).then( result => {\n\n            this.setState({\n                evalResult: result.status\n            })\n            \n            this.state.updateApp()\n\n            btn.innerHTML = btn_caption\n        });\n    }\n\n    getDependencies()\n    {\n        let FromulaDependency = \"\"\n\n        let dependencies = this.props.formula.get_dependencies()\n\n        if (0 === dependencies.data.length)\n        {\n            if (\"ok\" !== dependencies.status)\n                FromulaDependency = \"Error getting dependency: \" + dependencies.status\n            else\n                FromulaDependency = \"Has no dependency\"\n        }\n        else\n            FromulaDependency = dependencies.data.map((dep, i) => <div key={i}>{dep.ArgName}<Manifest application={this.state.application} dataTogglePopup={this.state.dataTogglePopup} updateApp={this.state.updateApp} manifest={{data:dep,status:\"ok\"}} /></div>)\n        \n        return FromulaDependency\n    }\n\n    render()\n    {\n        return (\n            <div className=\"col-md-12\">\n                <button className=\"btn btn-sm btn-warning m-2\" onClick={this.handleEval}>Evaluate Formula</button>\n               \n                <div className=\"border-bottom m-2\"></div>\n            {this.state.evalResult}\n            {this.getDependencies()}\n            </div>\n        );\n    }\n}\n\nexport default Formula;","import React, { Component } from \"react\";\nimport Formula from \"./Formula.js\";\n\nclass Manifest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      application: props.application,\n      updateApp: props.updateApp,\n      cache: props.application.engine.cache(),\n      network: props.application.engine.network(),\n      manifest: props.manifest,\n      init_manifest: props.manifest,\n      rootManifest: props.rootManifest,\n      showData: props.showData,\n      dataTogglePopup: props.dataTogglePopup,\n      showFormulas: props.showFormulas\n    };\n\n    this.handleFetchManifest = this.handleFetchManifest.bind(this);\n    this.handleRemoveManifest = this.handleRemoveManifest.bind(this);\n\n    this.handleFetchData = this.handleFetchData.bind(this);\n    this.handleRemoveData = this.handleRemoveData.bind(this);\n    this.handleViewData = this.handleViewData.bind(this);\n    this.handleManifestView = this.handleManifestView.bind(this);\n\n    if (this.state.rootManifest) {\n      this.updateManifest = this.updateManifest.bind(this);\n      this.state.application.setUpdateManifest(this.updateManifest);\n    }\n\n    this.handleChangeManifestFocus = this.handleChangeManifestFocus.bind(this);\n  }\n\n  handleViewData() {\n    this.state.application.updateDataView({\n      MIME: this.state.manifest.data.get_mime().data,\n      data: this.state.manifest.rawData\n    });\n    this.state.updateApp();\n    this.state.dataTogglePopup();\n  }\n  handleManifestView() {\n     let manifest = this.state.manifest;\n   \n    this.state.updateApp();\n    this.state.application.updateDataView({\n      MIME: \"manifest\",\n      data: manifest.data\n    });\n    this.state.dataTogglePopup();\n  }\n\n  handleChangeManifestFocus() {\n    if (this.state.rootManifest) this.state.application.PopManifestFocusList();\n    else this.state.application.PushManifestFocusList(this.state.manifest);\n  }\n\n  updateManifest() {\n    this.setState({\n      manifest: this.state.application.getCurrentManifest(),\n      init_manifest: this.state.application.getCurrentManifest()\n    });\n    this.state.updateApp();\n  }\n\n  handleFetchManifest(event) {\n    let btn = event.target;\n    let btn_caption = event.target.innerHTML;\n\n    event.target.innerHTML = \"fetching...\";\n\n    this.state.network\n      .search_manifest_by_doi(event.target.value)\n      .then(fetchRes => {\n        if (\"ok\" === fetchRes.status) {\n          this.setState({\n            manifest: fetchRes\n          });\n\n          //console.log(this.state.manifest)\n\n          this.state.updateApp();\n        } else btn.innerHTML = btn_caption;\n      });\n  }\n\n  handleRemoveManifest(event) {\n    if (this.state.cache.delete_manifest_by_doi(event.target.value)) {\n      this.setState({\n        manifest: this.state.init_manifest\n      });\n\n      this.state.updateApp();\n    }\n  }\n\n  handleFetchData(event) {\n    let btn = event.target;\n    let btn_caption = event.target.innerHTML;\n\n    event.target.innerHTML = \"fetching...\";\n\n    this.state.network.search_data_by_doi(event.target.value).then(fetchRes => {\n      if (\"ok\" === fetchRes.status) {\n        let updatedManifest = this.state.manifest;\n        updatedManifest.rawData = fetchRes.data;\n\n        this.setState({\n          manifest: updatedManifest\n        });\n      } else btn.innerHTML = btn_caption;\n\n      this.state.updateApp();\n    });\n  }\n\n  handleRemoveData(event) {\n    if (this.state.cache.delete_data_by_doi(event.target.value)) {\n      let updatedManifest = this.state.manifest;\n      updatedManifest.rawData = null;\n\n      this.setState({\n        manifest: updatedManifest\n      });\n\n      this.state.updateApp();\n    }\n  }\n\n  getManifestHeader() {\n    let ManifestHeader = <div>\"Has no DOI\"</div>;\n\n    let manifestDoi = this.state.manifest.data.get_doi();\n\n    if (\"ok\" === manifestDoi.status) {\n      let doi = manifestDoi.data[0];\n\n      // this trick needs to update same manifests in other formulas !\n      {\n        let manifestInCache = this.state.cache.get_manifest_by_doi(doi);\n        if (\"ok\" === manifestInCache.status)\n          this.state.manifest = manifestInCache;\n        else this.state.manifest = this.state.init_manifest;\n\n        let dataInCache = this.state.cache.get_data_by_doi(doi);\n        if (\"ok\" === dataInCache.status)\n          this.state.manifest.rawData = dataInCache.data;\n        else {\n          let raw_value = this.state.manifest.data.get_raw_value();\n          if (\"ok\" === raw_value.status)\n            this.state.manifest.rawData = raw_value.data;\n          else this.state.manifest.rawData = null;\n        }\n      }\n\n      let manifestMime =\n        \"ok\" === this.state.manifest.data.get_mime().status\n          ? \"MIME: '\" + this.state.manifest.data.get_mime().data + \"'\"\n          : this.state.manifest.data.get_mime().status;\n\n      let manifestSize =\n        \"ok\" === this.state.manifest.data.get_size().status\n          ? \"Size: \" + this.state.manifest.data.get_size().data + \"\"\n          : this.state.manifest.data.get_size().status;\n\n      if (doi) {\n        if (doi.length > 10)\n          ManifestHeader =\n            \"DOI: \" +\n            doi.substr(0, 10) +\n            \"...\" +\n            doi.substr(doi.length - 10, 10) +\n            manifestMime +\n            \", \" +\n            manifestSize;\n        else\n          ManifestHeader =\n            \"DOI: \" + doi + \"; \" + manifestMime + \", \" + manifestSize;\n      } else\n        ManifestHeader = \"Has no DOI \" + manifestMime + \", \" + manifestSize;\n\n      if (null != this.state.manifest.rawData) {\n        let rawData = new Uint8Array(this.state.manifest.rawData).toString();\n        ManifestHeader =\n          ManifestHeader +\n          \", Data: \" +\n          rawData.substr(0, 10) +\n          \"...\" +\n          rawData.substr(rawData.length - 10, 10);\n      } else ManifestHeader = ManifestHeader + \", Has no data\";\n\n      ManifestHeader = ManifestHeader + \")\";\n    }\n\n    let manifestS = (\n      <div className=\"text-left m-2 text-truncate\">\n        <p className=\"m-1\">\n          MIME:{\" \"}\n          {this.state.manifest.data.get_mime().data !== null\n            ? this.state.manifest.data.get_mime().data\n            : \"Has no MIME\"}\n        </p>\n\n        <p className=\"m-1\">\n          Size:{\" \"}\n          {this.state.manifest.data.get_size().data !== null\n            ? (this.state.manifest.data.get_size().data / 1024).toFixed(2) +\n              \" kB\"\n            : \"Has no size\"}\n        </p>\n\n        <p className=\"m-1\">\n          DOI:{\" \"}\n          {this.state.manifest.data.get_doi().data !== null\n            ? this.state.manifest.data.get_doi().data\n            : \"Has no DOI\"}\n        </p>\n\n        <p className=\"m-1\">\n          {\" \"}\n          Raw Value:{\" \"}\n          {this.state.manifest.rawData !== null\n            ? this.state.manifest.data.get_raw_value().data\n            : \"There is no raw value\"}\n        </p>\n      </div>\n    );\n\n    return ManifestHeader && manifestS;\n  }\n\n  getManifestControls() {\n    let ManifestControls = \"\";\n\n    let manifestDoi = this.state.manifest.data.get_doi();\n\n    let viewButton;\n    viewButton = (\n      <button\n        className=\"btn btn-sm btn-success m-1\"\n        onClick={this.handleManifestView}\n      >\n        View Manifest\n      </button>\n    );\n\n    let viewDataButton;\n    viewDataButton = (\n      <button\n        className=\"btn btn-sm btn-success m-1\"\n        onClick={this.handleViewData}\n      >\n        View Data\n      </button>\n    );\n\n    if (\"ok\" === manifestDoi.status) {\n      let doi = manifestDoi.data[0];\n\n      let manifestInCache = this.state.cache.get_manifest_by_doi(doi);\n\n      let mC = \"\";\n      if (\"ok\" === manifestInCache.status)\n        mC = (\n          <div>\n            <button\n              className=\"btn btn-sm btn-danger m-1\"\n              onClick={this.handleRemoveManifest}\n              value={doi}\n            >\n              Remove Manifest\n            </button>\n          </div>\n        );\n      else\n        mC = (\n          <div>\n            <button\n              className=\"btn btn-sm btn-primary m-1\"\n              onClick={this.handleFetchManifest}\n              value={doi}\n            >\n              Fetch Manifest\n            </button>\n          </div>\n        );\n\n      let pW = <div>{viewButton}</div>;\n\n      let dataInCache = this.state.cache.get_data_by_doi(doi);\n\n      let dC = \"\";\n      if (\"ok\" === dataInCache.status)\n        dC = (\n          <div>\n            <button\n              className=\"btn btn-sm btn-danger m-1\"\n              onClick={this.handleRemoveData}\n              value={doi}\n            >\n              Remove Data\n            </button>\n          </div>\n        );\n      else\n        dC = (\n          <div>\n            <button\n              className=\"btn btn-sm btn-primary m-1\"\n              onClick={this.handleFetchData}\n              value={doi}\n            >\n              Fetch Data\n            </button>\n          </div>\n        );\n\n      let dV = \"\";\n      if (\n        (\"ok\" === manifestInCache.status ||\n          \"ok\" === this.state.manifest.data.get_mime().status) &&\n        \"ok\" === dataInCache.status\n      )\n        dV = <div>{viewDataButton}</div>;\n      else {\n        if (\n          \"ok\" === this.state.manifest.data.get_mime().status &&\n          this.state.manifest.rawData\n        )\n          dV = (\n            <div>\n              <button\n                className=\"btn btn-sm btn-info m-1\"\n                onClick={this.handleViewData}\n              >\n                View Data\n              </button>\n            </div>\n          );\n      }\n\n      ManifestControls = (\n        <div\n          className=\"btn-group bg-secondary border-0\"\n          role=\"group\"\n          aria-label=\"Manifest controls\"\n        >\n          <div>{mC}</div>\n          <div>{dC}</div>\n          <div>{dV}</div>\n          <div>{pW}</div>\n        </div>\n      );\n    }\n\n    return ManifestControls;\n  }\n\n  getManifestFormulas() {\n    let ManifestFromulas = \"\";\n\n    let formulas = this.state.manifest.data.get_formulas();\n\n    if (0 === formulas.data.length) {\n      if (\"ok\" !== formulas.status)\n        ManifestFromulas = \"Error getting formulas: \" + formulas.status;\n      else ManifestFromulas = \"Has no formulas\";\n    } else\n      ManifestFromulas = formulas.data.map((formula, i) => (\n        <div key={i} className=\"bg-secondary text-white\">\n          <Formula\n            application={this.state.application}\n            dataTogglePopup={this.state.dataTogglePopup}\n            updateApp={this.state.updateApp}\n            formula={formula}\n          />\n        </div>\n      ));\n\n    return ManifestFromulas;\n  }\n\n  render() {\n    if (null == this.state.manifest || \"ok\" !== this.state.manifest.status) {\n      let outStr =\n        null != this.state.manifest\n          ? this.state.manifest.status\n          : \"is not defined\";\n\n      return (\n        <nav className=\"Manifest bg-secondary text-white m-2\">\n          <div className=\"alert alert-success alert-dismissible fade show rounded-lg\">\n            <div className=\"col-md-12 font-weight-bold text-center\">\n              MANIFEST\n            </div>\n            <div className=\"text-center\">{outStr}</div>\n          </div>\n        </nav>\n      );\n    }\n\n    let focus_button = (\n      <button\n        className=\"btn btn-md btn-secondary\"\n        onClick={this.handleChangeManifestFocus}\n      >\n        <span role=\"img\" aria-label=\"lookup\">\n          &#x1F50D;\n        </span>\n      </button>\n    );\n\n    if (this.state.rootManifest) {\n      if (false === this.state.application.ManifestFocusListIsEmpty())\n        focus_button = (\n          <button\n            className=\"btn btn-md btn-secondary\"\n            onClick={this.handleChangeManifestFocus}\n          >\n            <span role=\"img\" aria-label=\"return\">\n              &#9166;\n            </span>\n          </button>\n        );\n      else focus_button = \"\";\n    }\n\n    let show_formulas = \"\";\n    {\n      if (this.props.showFormulas)\n        show_formulas = (\n          <div>\n            {focus_button}\n            <div>{this.getManifestFormulas()}</div>\n          </div>\n        );\n      else show_formulas = null;\n    }\n\n    return (\n      <nav className=\"Manifest\">\n        <div className=\"p-1 border-0 bg-secondary rounded-lg text-white\">\n          <div className=\"d-flex justify-content-end m-0\">{focus_button}</div>\n          <div className=\"alert alert-success alert-dismissible fade show rounded-lg\">\n            {\" \"}\n            {this.getManifestHeader()}\n          </div>\n\n          <div>{this.getManifestControls()}</div>\n\n          <div>{this.getManifestFormulas()}</div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Manifest;\n","import React from \"react\";\n\nclass NavTabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cacheIsShown: props.cacheIsShown,\n      networkIsShown: props.networkIsShown,\n      viewerIsShown: props.viewerIsShown,\n      application: props.application\n    };\n  }\n  render() {\n    return (\n      <div className=\"NavTabs bg-secondary text-white rounded-lg p-4\">\n        <ul\n          className=\"nav nav-tabs bg-secondary md-tabs\"\n          id=\"myTabMD\"\n          role=\"tablist\"\n        >\n          <li className=\"nav-item \">\n            <a\n              className={\n                \"nav-link active btn btn-sm m-2 \" +\n                (this.props.cacheIsShown ||\n                this.props.networkIsShown ||\n                this.props.viewerIsShown\n                  ? \"btn-secondary\"\n                  : \"btn-warning\")\n              }\n              id=\"home-tab-md\"\n              data-toggle=\"tab\"\n              href=\"#home-md\"\n              role=\"tab\"\n              aria-controls=\"network-md\"\n              aria-selected=\"true\"\n              onClick={this.props.handleHomePage}\n            >\n              Home\n            </a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a\n              className={\n                \"nav-link active btn btn-sm m-2 \" +\n                (this.props.cacheIsShown ? \"btn-warning\" : \"btn-secondary\")\n              }\n              id=\"cache-tab-md\"\n              data-toggle=\"tab\"\n              href=\"#cache-md\"\n              role=\"tab\"\n              aria-controls=\"cache-md\"\n              aria-selected=\"false\"\n              onClick={this.props.handleShowCache}\n            >\n              Cache\n            </a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a\n              className={\n                \"nav-link active btn btn-sm m-2 \" +\n                (this.props.networkIsShown ? \"btn-warning\" : \"btn-secondary\")\n              }\n              id=\"network-tab-md\"\n              data-toggle=\"tab\"\n              href=\"#network-md\"\n              role=\"tab\"\n              aria-controls=\"network-md\"\n              aria-selected=\"false\"\n              onClick={this.props.handleShowNetwork}\n            >\n              Network\n            </a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a\n              className={\n                \"nav-link active btn btn-sm m-2 \" +\n                (this.props.viewerIsShown ? \"btn-warning\" : \"btn-secondary\")\n              }\n              id=\"viewer-tab-md\"\n              data-toggle=\"tab\"\n              href=\"#viewer-md\"\n              role=\"tab\"\n              aria-controls=\"viewer-md\"\n              aria-selected=\"false\"\n              onClick={this.props.handleShowViewer}\n            >\n              Viewer\n            </a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a\n              className={\n                \"nav-link active btn btn-sm m-2 \" +\n                (this.props.application.current_manifest_status === \"ok\"\n                  ? \"btn-warning\"\n                  : \"btn-secondary\")\n              }\n              id=\"viewer-tab-md\"\n              data-toggle=\"tab\"\n              href=\"#viewer-md\"\n              role=\"tab\"\n              aria-controls=\"viewer-md\"\n              aria-selected=\"false\"\n              onClick={this.props.handleClearAll}\n            >\n              Clear All\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default NavTabs;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Cache from './cmp/Cache.js';\nimport Network from './cmp/Network.js';\nimport Manifest from './cmp/Manifest.js';\nimport DataViewer from './cmp/DataViewer.js';\nimport NavTabs from './cmp/NavTabs.js';\n\n\nclass App extends Component {\n \n  constructor(props) \n  {\n    super(props)\n\n    this.state = {\n      application:  props.application,\n      cache:        props.application.getCache(),\n      network:      props.application.getNetwork(),\n      cacheIsShown: false,\n      networkIsShown: false,\n      viewerIsShown: false,\n      showData: false,\n     \n    }\n    this.updateApp = this.updateApp.bind(this);\n    this.dataTogglePopup = this.dataTogglePopup.bind(this);\n   \n  }\n  dataTogglePopup = () => {  \n    this.setState({  \n       showData: !this.state.showData \n        }); \n          } \n\n    updateApp(){this.forceUpdate()};\n\n     handleShowCache = () => {\n       this.setState({cacheIsShown: !this.state.cacheIsShown})\n      }; \n\n     handleShowNetwork = () => {\n       this.setState({networkIsShown: !this.state.networkIsShown})\n      }; \n\n     handleShowViewer = () => {\n       this.setState({viewerIsShown: !this.state.viewerIsShown})\n      };\n\n     handleHomePage = () => {\n       this.setState({cacheIsShown: false, networkIsShown: false, viewerIsShown: false})\n      }; \n\n     handleClearAll = () => {\n       this.state.application.setNewManifest(null);\n       this.state.cache.clear();\n       this.updateApp();\n      };\n      \n\n  render()\n  \n  {\n      \n    \n    return (\n      <div className=\"container\">\n      <div className=\"App col-lg-12 bg-secondary rounded mb-0 text-white\">\n        <NavTabs \n        handleShowCache={this.handleShowCache} handleShowNetwork={this.handleShowNetwork} handleShowViewer={this.handleShowViewer} \n        handleHomePage={this.handleHomePage} handleClearAll={this.handleClearAll} cacheIsShown={this.state.cacheIsShown} \n        networkIsShown={this.state.networkIsShown} viewerIsShown={this.state.viewerIsShown} application={this.state.application}\n        />\n          <br/>\n       <div>\n        <Manifest application={ this.state.application }  updateApp={this.updateApp} showData={this.state.showData} dataTogglePopup={this.dataTogglePopup.bind(this)}\n        manifest={this.state.application.getCurrentManifest()} rootManifest={true}/> \n        </div>\n        <br/>\n        <div>{this.state.cacheIsShown ?\n        <Cache application={this.state.application} showData={this.state.showData} dataTogglePopup={this.dataTogglePopup.bind(this)} cache={this.state.cache} updateApp={this.updateApp}/> : null}\n        </div>\n        <br/>\n        <div>{this.state.networkIsShown ?\n        <Network network={this.state.network} updateApp={this.updateApp}/> : null}\n        </div>\n        <br/>\n        <div>\n        <DataViewer application={this.state.application} cache={this.state.cache} handleShowViewer={this.handleShowViewer.bind(this)} dataTogglePopup={this.dataTogglePopup.bind(this)} showData={this.state.showData} viewerIsShown={this.state.viewerIsShown}/> \n      </div>\n         </div>\n         </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nclass RunButton extends Component {\n\n    constructor(props) \n    {\n        super(props)\n\n        this.state = {\n            application: props.application,\n            textAreaID: props.textAreaID,\n        }\n\n        this.actionClick = this.actionClick.bind(this)\n    }\n\n    actionClick(event){\n        let manifestText = document.getElementById(this.state.textAreaID).value\n        this.state.application.setNewManifest(manifestText)\n        \n\n    }\n\n    render() {\n        return (\n            <button className=\"btn btn-sm btn-primary m-2 float-center\" onClick={this.actionClick}>Manifest to App</button>\n        )\n    }\n}\n\nexport default RunButton;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport KolmoApplication from './KolmoApplication.js'\nimport RunButton from './cmp/RunButton.js'\nimport ViewButton from './cmp/ViewButton.js'\n\nlet application = new KolmoApplication(process.env.REACT_APP_DEDICATED_SERVER_ADDRESS, true);\n\nReactDOM.render(<App application={application}/>, document.getElementById('root'));\n\nvar interactives = document.querySelectorAll(\"div.interactive-canvas\");\n\ninteractives.forEach(function(interactivePanel) {\n\n    if ( interactivePanel.querySelector(\"textarea.manifest-text\") )\n    {\n        let textAreaID = interactivePanel.querySelector(\"textarea.manifest-text\").id;\n        let buttonElement =  interactivePanel.querySelector(\"span.run-button-placeholder\");\n        if ( buttonElement )\n            ReactDOM.render(<RunButton application={application} textAreaID={textAreaID}/>, buttonElement);\n\n        if ( interactivePanel.querySelector(\"span.manifest-data-placeholder\") )\n        {\n            let manifestDataHolderID = interactivePanel.querySelector(\"span.manifest-data-placeholder\").id\n            buttonElement =  interactivePanel.querySelector(\"span.render-button-placeholder\");\n            if ( buttonElement )\n                ReactDOM.render(<ViewButton textAreaID={textAreaID} manifestDataHolderID={manifestDataHolderID}/>, buttonElement);\n        }\n    }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}